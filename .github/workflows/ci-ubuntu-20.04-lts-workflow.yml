name: CI-Ubuntu-20.04-LTS

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  macos-build-test:
    name: macos build & test
    strategy:
      matrix:
        runner: [macos-11, macos-12]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Ensure Python dependencies
        run: |
          pip install torch~=2.0.0 --extra-index-url https://download.pytorch.org/whl/cpu
          pip install --user -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.0.0+cpu.html

      - name: Ensure Node.js dependencies
        working-directory: tools/nodejs_api
        run: npm install --include=dev

      - name: Build
        run: make release NUM_THREADS=$(nproc)

      - name: Test
        run: make test NUM_THREADS=$(nproc)
        continue-on-error: true

      - name: C example
        working-directory: examples/c
        run: |
          mkdir build -p
          cd build
          cmake ..
          cmake --build .

      - name: C++ example
        working-directory: examples/cpp
        run: |
          mkdir build -p
          cd build
          cmake ..
          cmake --build .

      - name: Python test
        run: make pytest NUM_THREADS=$(sysctl -n hw.physicalcpu)
      
      - name: Node.js test
        run: make nodejstest NUM_THREADS=$(sysctl -n hw.physicalcpu)
      
      - name: Java test
        run: make javatest NUM_THREADS=$(sysctl -n hw.physicalcpu)

      - name: Rust share build
        run: echo $'[workspace]\nmembers = ["tools/rust_api","examples/rust"]' > Cargo.toml

      - name: Rust set env
        run: echo "CARGO_BUILD_JOBS=$(sysctl -n hw.physicalcpu)" >> $GITHUB_ENV

      - name: Rust test
        working-directory: tools/rust_api
        run: |
          cargo update -p half@2.3.1 --precise '2.2.1'
          cargo update -p time --precise '0.3.23'
          cargo test --features arrow -- --test-threads=1

      - name: Rust example
        working-directory: examples/rust
        run: cargo build --features arrow
